// This is an autogenerated file from Firebase Studio.
'use server';
import { db } from '@/lib/firebase';
import type { CustomMeal } from '@/lib/types';
import { collection, getDocs, addDoc } from 'firebase/firestore';

const mealCollection = collection(db, 'customMeals');

export async function getCustomMeals(): Promise<CustomMeal[]> {
    const snapshot = await getDocs(mealCollection);
    return snapshot.docs.map(doc => {
        const data = doc.data();
        // Ensure default values for optional fields to prevent serialization issues.
        const meal: CustomMeal = {
            id: doc.id,
            name: data.name,
            items: data.items || [],
            totalCalories: data.totalCalories || 0,
            totalProtein: data.totalProtein || 0,
            totalCarbs: data.totalCarbs || 0,
            totalFats: data.totalFats || 0,
            servingSize: data.servingSize || 1,
            servingUnit: data.servingUnit || 'serving',
        };
        return meal;
    });
}

export async function addCustomMeal(meal: Omit<CustomMeal, 'id'>): Promise<CustomMeal> {
    try {
        // Sanitize the object to ensure it's Firestore-compatible
        const cleanMeal = JSON.parse(JSON.stringify(meal));
        const docRef = await addDoc(mealCollection, cleanMeal);
        return { id: docRef.id, ...cleanMeal };
    } catch (error) {
        console.error("Error adding document to Firestore: ", error);
        // Re-throw the error to be caught by the calling function
        if (error instanceof Error) {
            throw new Error(`Firestore error: ${error.message}`);
        }
        throw new Error('An unknown error occurred while saving to Firestore.');
    }
}
