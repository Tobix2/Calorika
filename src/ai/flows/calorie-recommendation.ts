// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview An AI agent that recommends a daily calorie and macronutrient intake based on user data and fitness goals.
 *
 * - getCalorieRecommendation - A function that handles the calorie and macro recommendation process.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const CalorieRecommendationInputSchema = z.object({
  age: z.number().describe('The age of the user.'),
  weight: z.number().describe('The weight of the user in kilograms.'),
  height: z.number().describe('The height of the user in centimeters.'),
  activityLevel: z
    .enum(['sedentary', 'lightlyActive', 'moderatelyActive', 'veryActive', 'extraActive'])
    .describe('The activity level of the user.'),
  goal: z.enum(['loseWeight', 'maintainWeight', 'gainMuscle']).describe('The fitness goal of the user.'),
});
export type CalorieRecommendationInput = z.infer<typeof CalorieRecommendationInputSchema>;

const CalorieRecommendationOutputSchema = z.object({
  recommendedCalories: z.number().describe('The recommended daily calorie intake.'),
  recommendedProtein: z.number().describe('The recommended daily protein intake in grams.'),
  recommendedCarbs: z.number().describe('The recommended daily carbohydrate intake in grams.'),
  recommendedFats: z.number().describe('The recommended daily fat intake in grams.'),
  explanation: z.string().describe('A detailed explanation of how the calorie and macronutrient recommendations were calculated.'),
});
export type CalorieRecommendationOutput = z.infer<typeof CalorieRecommendationOutputSchema>;

export async function getCalorieRecommendation(input: CalorieRecommendationInput): Promise<CalorieRecommendationOutput> {
  return calorieRecommendationFlow(input);
}

const prompt = ai.definePrompt({
  name: 'calorieRecommendationPrompt',
  input: {schema: CalorieRecommendationInputSchema},
  output: {schema: CalorieRecommendationOutputSchema},
  prompt: `You are a personal trainer that recommends a daily calorie and macronutrient intake based on the user's personal data and fitness goals.

  Calculate the recommended daily calorie intake and the macronutrient breakdown (protein, carbs, fats) in grams based on the following information:
  Age: {{{age}}}
  Weight: {{{weight}}} kg
  Height: {{{height}}} cm
  Activity Level: {{{activityLevel}}}
  Goal: {{{goal}}}

  Provide a detailed explanation of how you calculated the calorie and macronutrient recommendations and why it is appropriate for the user's goal.
  Ensure the explanation is easy to understand and provides actionable advice.

  Return the result in JSON format.
  `,
});

const calorieRecommendationFlow = ai.defineFlow(
  {
    name: 'calorieRecommendationFlow',
    inputSchema: CalorieRecommendationInputSchema,
    outputSchema: CalorieRecommendationOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
